# Generated by Django 2.1 on 2021-10-03 11:38

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.utils.timezone
import user.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserProfiles',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nick_name', models.CharField(default='', max_length=30, verbose_name='nickname')),
                ('head_portrait', models.ImageField(blank=True, default='user/default_head_portrait/default.png', upload_to=user.models.upload_user_image_path, verbose_name='Avatar')),
                ('gender', models.CharField(choices=[('male', 'male'), ('female', 'female')], default='male', max_length=6, verbose_name='Gender')),
                ('is_author', models.CharField(choices=[('yes', 'yes'), ('no', 'no')], default='no', max_length=6, verbose_name='This it a food author')),
                ('birthday', models.DateField(blank=True, null=True, verbose_name='birthday')),
                ('address', models.CharField(blank=True, default='', max_length=50, verbose_name='region')),
                ('signature', models.CharField(blank=True, default='', max_length=80, verbose_name='signature')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User Info',
                'verbose_name_plural': 'User Info',
                'db_table': 'user_profiles',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Cities',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.IntegerField(default=0, verbose_name='Province number')),
                ('cid', models.IntegerField(default=0, verbose_name='City ID')),
                ('name', models.CharField(default='', max_length=20, verbose_name='city')),
                ('add_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Added at')),
            ],
            options={
                'verbose_name': 'city',
                'verbose_name_plural': 'city',
                'db_table': 'address_cities',
            },
        ),
        migrations.CreateModel(
            name='EmailVerifyCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='E-mail verification code')),
                ('email', models.EmailField(max_length=245, verbose_name='email')),
                ('send_type', models.CharField(choices=[('register', 'registration'), ('forget', 'retrieve password'), ('reset_email', 'email reset')], max_length=20, verbose_name='Verification code type')),
                ('verify_times', models.IntegerField(default=1, verbose_name='The number of times an user can be verified')),
                ('send_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Send time')),
            ],
            options={
                'verbose_name': 'email verification code',
                'verbose_name_plural': 'email verification code',
                'db_table': 'email_verify_coder',
            },
        ),
        migrations.CreateModel(
            name='Provinces',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.IntegerField(default=0, verbose_name='City ID')),
                ('name', models.CharField(default='', max_length=10, verbose_name='Province')),
                ('add_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Added at')),
            ],
            options={
                'verbose_name': 'Province',
                'verbose_name_plural': 'Province',
                'db_table': 'address_provinces',
            },
        ),
        migrations.CreateModel(
            name='RecodeImage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recode_image_name', models.CharField(default='', max_length=10, verbose_name='Verification code image name')),
                ('recode_number_a', models.IntegerField(default=0, verbose_name='Verification code number a')),
                ('recode_number_b', models.IntegerField(default=0, verbose_name='Verification code number b')),
                ('recode_image_path', models.ImageField(upload_to=user.models.recode_image_path, verbose_name='Verification code image')),
                ('add_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='added at')),
            ],
            options={
                'verbose_name': 'image verification code',
                'verbose_name_plural': 'image verification code',
                'db_table': 'recode_image',
            },
        ),
        migrations.CreateModel(
            name='Regions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pid', models.IntegerField(default=0, verbose_name='Province Number')),
                ('cid', models.IntegerField(default=0, verbose_name='City ID')),
                ('rid', models.IntegerField(default=0, verbose_name='County Number')),
                ('name', models.CharField(default='', max_length=20, verbose_name='county')),
                ('add_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Added at')),
            ],
            options={
                'verbose_name': 'countyc',
                'verbose_name_plural': 'countyc',
                'db_table': 'address_regions',
            },
        ),
    ]
